// Mocks generated by Mockito 5.4.4 from annotations
// in image_fetcher/test/features/gallery/domain/use_cases/mock_use_cases/use_cases.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i4;

import 'package:image_fetcher/features/gallery/domain/use_case/get_all_images.dart'
    as _i2;
import 'package:image_fetcher/features/gallery/domain/use_case/save_all_images.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetAllImages].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllImages extends _i1.Mock implements _i2.GetAllImages {
  MockGetAllImages() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.File>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3.Future<List<_i4.File>>.value(<_i4.File>[]),
      ) as _i3.Future<List<_i4.File>>);
}

/// A class which mocks [SaveAllImages].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveAllImages extends _i1.Mock implements _i5.SaveAllImages {
  MockSaveAllImages() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> call(List<_i4.File>? images) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [images],
        ),
        returnValue: _i3.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #call,
            [images],
          ),
        )),
      ) as _i3.Future<String>);
}
